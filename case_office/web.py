# Created by nikitanovikov at 11.10.2023

# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
# –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —É—Å–ª–æ–≤–∏—è—Ö –∫–æ–≤–∏–¥


###________________________–ë–ò–ë–õ–ò–û–¢–ï–ö–ò___________________________###
import os
import time
import asyncio
import pandas as super_puper_lib
import matplotlib.pyplot as plt
import pywebio
from pywebio import start_server
from pywebio.input import input, input_group
from pywebio.pin import *
from pywebio.output import *
from pywebio.session import defer_call, info as session_info, run_async, run_js
import re
###_____________________________________________________________###

# –ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
logo_path = os.path.join('data', 'my_logo.png')
office_plan_first = os.path.join('data', 'office_plan.png')
office_path_final = os.path.join('data', 'office_final_plan.png')
table_1 = os.path.join('data', '1_table.csv')



db = super_puper_lib.read_csv(table_1)



pywebio.config(theme='dark')


def alg(p):
    max_workers = int(p.input)
    places_array = map(int, (p.input2.split(',')))

    final_list = []
    i = 0

    for place in places_array:
        counter = 0
        coef = 0
        i = 0
        while round(i, 1) >= 3.6 or i == 0 and max_workers != 0:
            counter += 1
            max_workers -= 1
            i = place / counter

        final_list.append(f'{counter} —á–µ–ª–æ–≤–µ–∫ - {place} –º¬≤')

    return put_text(f'–¢–µ–∫—É—â–µ–µ —Ä–∞—Å–ø—Ä–µ–¥–ª–µ–Ω–∏–µ –ø–æ –∫–∞–±–∏–Ω–µ—Ç–∞–º: {final_list}  \n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ –æ—Ñ–∏—Å - {max_workers}')



def main():
    # logo_path = os.path.join('data', 'my_logo.png')

    put_image(open(logo_path, 'rb').read(), width='200px').style("display: block;"
                                                                 "margin-left: auto;"
                                                                 "margin-right: auto ")

    put_button("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", onclick=lambda: popup('–ü–æ–¥—Ä–æ–±–Ω–µ–µ', [
                                    put_text('–î–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —Ä–µ—à–µ–Ω–∏—è –∫–µ–π—Å–∞ "–û—Ñ–∏—Å –±–µ–∑ –≥—Ä–∞–Ω–∏—Ü", –ª—é–±–æ–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–º–º–µ—Ä—á–µ—Å—Å–∫–∏—Ö —Ü–µ–ª—è—Ö –±—É–¥–µ—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞—Ç—å—Å—è –ø–æ –∑–∞–∫–æ–Ω—É –∏ –ª–∏—á–Ω–æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!\n'
                                             'üòé'),
                                    put_buttons(['–ó–∞–∫—Ä—ã—Ç—å'], onclick=lambda _: close_popup())
                                    ]), color='info', outline=True).style(f"float:right;"
                                                                "margin: 0px 0px 0px 15px;")

    put_html('<h1>'
                '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞ –≤ –æ—Ñ–∏—Å–∞—Ö –∫–æ–º–ø–∞–Ω–∏–π'
             '</h1>'
             )

    put_text('–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ—Ñ–∏—Å–∞–º –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö')
    put_html(db.to_html(border=1)).style('width: 1000px'
                                         'margin: 0 auto;')
    put_text('\n\n\n')
    put_text(''
             '–ö–ª–∏–∫–Ω–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ')
    def btn_click(btn_val):
        with use_scope('A'):
            match btn_val:
                case '–í–µ—Ä—Å–∏—è –æ—Ñ–∏—Å–∞ –±–µ–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏':
                    clear('A')
                    put_text(
                        '–í–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–ª–∞–Ω–∞ –æ—Ñ–∏—Å–∞ –∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ –æ—Ç—á–µ—Ç–ª–∏–≤–æ –≤–∏–¥–Ω–æ, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä —Å–∏–ª—å–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω–æ –∏ —Ç—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏!\n\n'
                        )
                    put_image(open(office_plan_first, 'rb').read(), width='1000px').style("display: block;"
                                                                 "margin-left: auto;"
                                                                 "margin-right: auto ")
                case '–ù–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è':
                    clear('A')
                    put_text(
                        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –º–∞–≥–∏—è! –¢–µ–ø–µ—Ä—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –ø–ª–æ—â–∞–¥–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ—Ä–º–∞–º!\n\n'
                    )
                    put_image(open(office_path_final, 'rb').read(), width='1000px').style("display: block;"
                                                                     "margin-left: auto;"
                                                                   "margin-right: auto ")
                    put_text('\n')
                    put_collapse('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏',
                        put_code(content="import java.util.ArrayList;\n"
                                         "import java.util.List;\n\n"
                                         "public class Main {\n\n"
                                         "\tpublic static void main(String[] args) {\n"
                                         "\t\tint max_workers = 599;\n"
                                         "\t\tint distant_workers = (int) (599 * 15 / 100);\n"
                                         "\t\tint[] places_array = {46, 70, 15, 112, 99, 75, 68, 28, 99, 448, 62, 83, 166, 378};\n"
                                         "\t\tList<String> final_list = new ArrayList<>();\n\n"
                                         "\t\tint counter;\n"
                                         "\t\tdouble coef;\n"
                                         "\t\tint i;\n\n"
                                         "\t\tfor (int place : places_array) {\n"
                                         "\t\t\tcounter = 0;\n"
                                         "\t\t\tcoef = 0;\n"
                                         "\t\t\ti = 0;\n\n"
                                         "\t\t\twhile (Math.round(i * 10) / 10.0 >= 3.6 || i == 0 && max_workers != 0) {\n"
                                         "\t\t\t\tcounter += 1;\n"
                                         "\t\t\t\tmax_workers -= 1;\n"
                                         "\t\t\t\ti = place / counter;\n"
                                         "\t\t\t}\n\n"
                                         "\t\t\tfinal_list.add(counter + ' - ' + place);\n"
                                         "\t\t}\n"
                                         "\tSystem.out.println(final_list);\n"
                                         "\t}\n"
                                         "}", language='java'))
                    put_text('\n\n')
                    put_html('<h2>'
                             '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º'
                             '</h2>'
                             '<p>'
                             '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è –Ω—É–∂–¥ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏'
                             '</p>', position=-1
                             )



                    put_input('input', label='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º–∞—Ä–Ω–æ–µ –æ—Ñ–∏—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤ –º¬≤')
                    put_input('input2', label='–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –∫–∞–±–∏–Ω–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n (–ü—Ä–∏–º–µ—Ä: 12,4,15)')

                    put_buttons(['Get FINAL Value'], lambda _: alg(pin))










    put_buttons(['–í–µ—Ä—Å–∏—è –æ—Ñ–∏—Å–∞ –±–µ–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏', '–ù–æ–≤–∞—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è'], onclick=btn_click)







if __name__ == "__main__":
    start_server(main, debug=True, port=8080, cdn=False, remote_access=True)